<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:exercise="platform:/plugin/no.hal.learning.exercise.model/model/exercise.ecore" xmlns:jdt="platform:/plugin/no.hal.learning.exercise.jdt/model/jdt-exercise.ecore" xmlns:junit="platform:/plugin/no.hal.learning.exercise.junit/model/junit-exercise.ecore" xmlns:workbench="platform:/plugin/no.hal.learning.exercise.workbench/model/workbench-exercise.ecore">
  <exercise:Exercise>
    <parts xsi:type="exercise:ExercisePart" title="CardContainer">
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Write source code for the Card class."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="interfaces.Card"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Write source code for the CardComparator class."/>
        <a xsi:type="jdt:JdtSourceEditAnswer" className="interfaces.CardComparator"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Test the Card class, by running its main method."/>
        <a xsi:type="jdt:JdtLaunchAnswer" className="interfaces.Card"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Test the CardComparator class, by running its main method."/>
        <a xsi:type="jdt:JdtLaunchAnswer" className="interfaces.CardComparator"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Run the CardComparatorTest JUnit test."/>
        <a xsi:type="junit:JunitTestAnswer" testRunName="interfaces.CardComparatorTest"/>
      </tasks>
    </parts>
    <parts xsi:type="exercise:ExercisePart" title="Tool usage">
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use breakpoints to debug code."/>
        <a xsi:type="workbench:DebugEventAnswer" elementId="interfaces.Card*" action="suspend.breakpoint"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the debug command Step Over"/>
        <a xsi:type="workbench:CommandExecutionAnswer" elementId="org.eclipse.debug.ui.commands.StepOver" action="executeSuccess"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the debug command Step Into"/>
        <a xsi:type="workbench:CommandExecutionAnswer" elementId="org.eclipse.debug.ui.commands.StepInto" action="executeSuccess"/>
      </tasks>
      <tasks xsi:type="exercise:Task">
        <q xsi:type="exercise:StringQuestion" question="Use the Variables view"/>
        <a xsi:type="workbench:PartTaskAnswer" elementId="org.eclipse.debug.ui.VariableView" action="activated"/>
      </tasks>
    </parts>
  </exercise:Exercise>
  <exercise:ExerciseProposals exercise="/0">
    <proposals exercisePart="/0/@parts.0">
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.0/@q" answer="/0/@parts.0/@tasks.0/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488880727088" sizeMeasure="5">
          <edit xsi:type="exercise:StringEdit" storedString="package interfaces;&#xA;&#xA;public class Card {&#xA;&#xA;}&#xA;"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488881079253" sizeMeasure="48" errorCount="1" warningCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="implements Comparable {&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Object o) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;if &#xA;&#x9;}" edit="/1/@proposals.0/@proposals.0/@attempts.0/@edit" start="39" end="-4"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488881148211" sizeMeasure="54" errorCount="3">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="&lt;Card> {&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Object o) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;if &#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card o) {&#xA;&#x9;&#x9;// TODO Auto-generated method stub&#xA;&#x9;&#x9;return 0;" edit="/1/@proposals.0/@proposals.0/@attempts.1/@edit" start="60" end="-7"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488882185622" sizeMeasure="64" errorCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="import java.awt.List;&#xA;import java.util.ArrayList;&#xA;import java.util.Collection;&#xA;&#xA;public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;private void typeOfCard() {&#xA;&#x9;&#x9;cardType.add(null, 'C');&#xA;&#x9;&#x9;cardType.add(null, 'D');&#xA;&#x9;&#x9;cardType.add(null, 'H');&#xA;&#x9;&#x9;cardType.add(null, 'S');&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;if (this.getSuit()==)&#xA;&#x9;}&#xA;" edit="/1/@proposals.0/@proposals.0/@attempts.2/@edit" start="21" end="-4"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488882483061" sizeMeasure="75" errorCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="ublic int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;if (this)&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;" edit="/1/@proposals.0/@proposals.0/@attempts.3/@edit" start="1057" end="-8"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488882815952" sizeMeasure="93" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="System.out.println(&quot;-1 betyr at kortet er mindre enn &quot; + card + &quot;. 1 betyr at kortet er større enn &quot; + card &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;. 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.0/@attempts.4/@edit" start="1634" end="-58"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488882822431" sizeMeasure="91">
          <edit xsi:type="exercise:ReplaceSubstringEdit" edit="/1/@proposals.0/@proposals.0/@attempts.5/@edit" start="43" end="-2046"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488883034951" sizeMeasure="100">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="&#xA;public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;System.out.println(&quot;-1 betyr at kortet er mindre enn &quot; + card + &quot;. 1 betyr at kortet er større enn &quot; + card &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;. 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S',2);&#xA;&#x9;&#x9;Card c2 = new Card('D', 3);&#xA;&#x9;&#x9;Card c3 = new Card('S', 7);&#xA;&#x9;&#x9;Card c4 = new Card('D', 3);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;System.out.println(c1.compareTo(c2));&#xA;&#x9;&#x9;System.out.println(c3.compareTo(c1));&#xA;&#x9;&#x9;System.out.println(c4.compareTo(c2));&#xA;&#x9;&#x9;" edit="/1/@proposals.0/@proposals.0/@attempts.6/@edit" start="43" end="-11"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488883077223" sizeMeasure="100">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -" edit="/1/@proposals.0/@proposals.0/@attempts.7/@edit" start="1783" end="-343"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488883106816" sizeMeasure="100">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="-1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return " edit="/1/@proposals.0/@proposals.0/@attempts.8/@edit" start="1922" end="-343"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488883138972" sizeMeasure="101">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="1.compareTo(c3" edit="/1/@proposals.0/@proposals.0/@attempts.9/@edit" start="2301" end="-57"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884098896" sizeMeasure="112" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="import java.util.ArrayList;&#xA;import java.util.Collection;&#xA;import java.util.Collections;&#xA;&#xA;public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;System.out.println(&quot;-1 betyr at kortet er mindre enn &quot; + card + &quot;. 1 betyr at kortet er større enn &quot; + card &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;. 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S',2);&#xA;&#x9;&#x9;Card c2 = new Card('D', 3);&#xA;&#x9;&#x9;Card c3 = new Card('S', 7);&#xA;&#x9;&#x9;Card c4 = new Card('D', 3);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c2));&#xA;&#x9;&#x9;//System.out.println(c3.compareTo(c1));&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c3));&#xA;&#x9;&#x9;//System.out.println(c4.compareTo(c2));&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList.add(c1);&#xA;&#x9;&#x9;cardList.add(c2);&#xA;&#x9;&#x9;cardList.add(c3);&#xA;&#x9;&#x9;cardList.add(c4);&#xA;&#x9;&#x9;cardList.sort(null);&#xA;&#x9;&#x9;System.out.println(cardList" edit="/1/@proposals.0/@proposals.0/@attempts.10/@edit" start="43" end="-16"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884150109" sizeMeasure="112" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="Collection" edit="/1/@proposals.0/@proposals.0/@attempts.11/@edit" start="2459" end="-185"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884159175" sizeMeasure="112" warningCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="//" edit="/1/@proposals.0/@proposals.0/@attempts.12/@edit" start="2588" end="-66"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884184638" sizeMeasure="112" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="ArrayList&lt;Card> cardList = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList.add(c1);&#xA;&#x9;&#x9;cardList.add(c2);&#xA;&#x9;&#x9;cardList.add(c3);&#xA;&#x9;&#x9;cardList.add(c4);&#xA;&#x9;&#x9;" edit="/1/@proposals.0/@proposals.0/@attempts.13/@edit" start="2459" end="-66"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884196653" sizeMeasure="110">
          <edit xsi:type="exercise:ReplaceSubstringEdit" edit="/1/@proposals.0/@proposals.0/@attempts.14/@edit" start="71" end="-2525"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488884514209" sizeMeasure="122" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="&#xA;public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;System.out.println(&quot;-1 betyr at kortet er mindre enn &quot; + card + &quot;. 1 betyr at kortet er større enn &quot; + card &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;. 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S',2);&#xA;&#x9;&#x9;Card c2 = new Card('D', 3);&#xA;&#x9;&#x9;Card c3 = new Card('S', 7);&#xA;&#x9;&#x9;Card c4 = new Card('D', 3);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c2));&#xA;&#x9;&#x9;//System.out.println(c3.compareTo(c1));&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c3));&#xA;&#x9;&#x9;//System.out.println(c4.compareTo(c2));&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList.add(c1);&#xA;&#x9;&#x9;cardList.add(c2);&#xA;&#x9;&#x9;cardList.add(c3);&#xA;&#x9;&#x9;cardList.add(c4);&#xA;&#x9;&#x9;cardList.sort(null);&#xA;&#x9;&#x9;System.out.println(cardList);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList2 = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList2.add(c1);&#xA;&#x9;&#x9;cardList2.add(c2);&#xA;&#x9;&#x9;cardList2.add(c3);&#xA;&#x9;&#x9;cardList2.add(c4);&#xA;&#x9;&#x9;for (Card i : cardList2) {&#xA;&#x9;&#x9;&#x9;if (i.compareTo() == -1) { //nei nei, i er et kort, vi må finne index&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.0/@attempts.15/@edit" start="71" end="-14"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488893586849" sizeMeasure="128" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="import stringSorter.StringComparer;&#xA;&#xA;public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;@Override&#xA;&#x9;public int compareTo(Card card) {&#xA;&#x9;&#x9;// compareTo-metoden skal sammenligne et kort med et annet, &#xA;&#x9;&#x9;// slik at spar vurderes som høyere enn hjerter, hjerter høyere enn ruter og ruter høyere enn kløver. &#xA;&#x9;&#x9;// Ved lik kortfarge skal verdien brukes, altså 1 (ess) er mindre enn 2 er mindre enn 3 osv. til &#xA;&#x9;&#x9;// og med 11 (knekt), 12 (dame) og 13 (konge).&#xA;&#x9;&#x9;System.out.println(&quot;-1 betyr at kortet er mindre enn &quot; + card + &quot;. 1 betyr at kortet er større enn &quot; + card &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;. 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S',2);&#xA;&#x9;&#x9;Card c2 = new Card('D', 3);&#xA;&#x9;&#x9;Card c3 = new Card('S', 7);&#xA;&#x9;&#x9;Card c4 = new Card('D', 3);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c2));&#xA;&#x9;&#x9;//System.out.println(c3.compareTo(c1));&#xA;&#x9;&#x9;//System.out.println(c1.compareTo(c3));&#xA;&#x9;&#x9;//System.out.println(c4.compareTo(c2));&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList.add(c1);&#xA;&#x9;&#x9;cardList.add(c2);&#xA;&#x9;&#x9;cardList.add(c3);&#xA;&#x9;&#x9;cardList.add(c4);&#xA;&#x9;&#x9;cardList.sort(null);&#xA;&#x9;&#x9;System.out.println(cardList);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList2 = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList2.add(c1);&#xA;&#x9;&#x9;cardList2.add(c2);&#xA;&#x9;&#x9;cardList2.add(c3);&#xA;&#x9;&#x9;cardList2.add(c4);&#xA;&#x9;&#x9;for(int i = 0; i &lt; cardList2.size(); i++) {&#xA;&#x9;&#x9;&#x9;&#x9;for (int j = cardList2.size() - 1; j > i; j--) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Card s1 = cardList2.get(j - 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Card s2 = cardList2.get(j);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (s2.compareTo(s1) == -1) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cardList2.set(j, s1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cardList2.set(j-1, s2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;System.out.println(cardList2);" edit="/1/@proposals.0/@proposals.0/@attempts.16/@edit" start="72" end="-8"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488893644232" sizeMeasure="130" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() > card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() &lt; card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;System.out.println(&quot;-1 betyr at kortet er mindre enn det andre kortet. 1 betyr at kortet er større enn &quot;&#xA;&#x9;&#x9;&#x9;&#x9;+ &quot;det andre kortet.&quot; &#xA;&#x9;&#x9;&#x9;&#x9;+ &quot; 0 betyr at kortene er like.&quot;);&#xA;&#x9;&#x9;" edit="/1/@proposals.0/@proposals.0/@attempts.17/@edit" start="1642" end="-936"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488893669091" sizeMeasure="129">
          <edit xsi:type="exercise:ReplaceSubstringEdit" edit="/1/@proposals.0/@proposals.0/@attempts.18/@edit" start="72" end="-2995"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916402945" sizeMeasure="129">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="public class Card implements Comparable&lt;Card> {&#xA;&#x9;&#xA;&#x9;List cardType = new List();&#xA;&#xA;&#x9;// the suit (farge), one of the values 'S' (spades), 'H' (hearts), 'D' (diamonds) and 'C' (clubs) &#xA;&#x9;private char suit;&#xA;&#x9;// the value, 1 for the ace, 2 - 10, 11 (knight), 12 (queen) and 13 (king). -1 is invalid&#xA;&#x9;private int face = -1;&#xA;&#xA;&#x9;// the set of suits in decreasing order&#xA;&#x9;public final static String SUITS = &quot;SHDC&quot;;&#xA;&#x9;&#xA;&#x9;public Card(char suit, int face) {&#xA;&#x9;&#x9;if (SUITS.indexOf(suit) &lt; 0) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal suit: &quot; + suit);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (face &lt; 1 || face > 13) {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Illegal face: &quot; + face);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;this.suit = suit;&#xA;&#x9;&#x9;this.face = face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;/*&#xA;&#x9; * Returns suit and face as a string&#xA;&#x9; * E.g. Ace of spades is S1 and king of clubs is C13&#xA;&#x9; */&#xA;&#x9;public String toString() {&#xA;&#x9;&#x9;return String.valueOf(suit) + face;&#xA;&#x9;}&#xA;&#xA;&#x9;public char getSuit() {&#xA;&#x9;&#x9;return this.suit;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int getFace() {&#xA;&#x9;&#x9;return this.face;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public int typeOfCard() {&#xA;&#x9;&#x9;if (this.getSuit() == 'S') {&#xA;&#x9;&#x9;&#x9;return 4;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'H') {&#xA;&#x9;&#x9;&#x9;return 3;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.getSuit() == 'D') {&#xA;&#x9;&#x9;&#x9;return 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;return 1" edit="/1/@proposals.0/@proposals.0/@attempts.19/@edit" start="73" end="-1838"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916522030" sizeMeasure="129">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="> card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (this.typeOfCard() &lt; card.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;if (this.getFace() > card.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (this.getFace() &lt;" edit="/1/@proposals.0/@proposals.0/@attempts.20/@edit" start="1628" end="-1229"/>
        </attempts>
      </proposals>
      <proposals xsi:type="jdt:JdtSourceEditProposal" question="/0/@parts.0/@tasks.1/@q" answer="/0/@parts.0/@tasks.1/@a">
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488893873419" sizeMeasure="5">
          <edit xsi:type="exercise:StringEdit" storedString="package interfaces;&#xA;&#xA;public class CardComparator {&#xA;&#xA;}&#xA;"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488894144064" sizeMeasure="21" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="import java.util.Comparator;&#xA;&#xA;public class CardComparator implements Comparator&lt;Card>{&#xA;&#x9;&#xA;&#x9;private boolean ess;&#xA;&#x9;private char trumf;&#xA;&#x9;&#xA;&#x9;public CardComparator(boolean ess, char trumf) {&#xA;&#x9;&#x9;this.ess = ess;&#xA;&#x9;&#x9;this.trumf = trumf;&#xA;&#x9;}&#xA;&#xA;&#x9;@Override&#xA;&#x9;public int compare(Card o1, Card o2) {&#xA;&#x9;&#x9;// TODO Auto-generated method stub&#xA;&#x9;&#x9;return 0;&#xA;&#x9;}" edit="/1/@proposals.0/@proposals.1/@attempts.0/@edit" start="21" end="-5"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488894419644" sizeMeasure="35" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="if (ess == false &amp;&amp; trumf == ' ') {&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess == false &amp;&amp; trumf != ' ') {&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf == ' ') {&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf != ' '){&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;throw new IllegalArgumentException(&quot;Ikke gyldig argument.&quot;);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#x9;" edit="/1/@proposals.0/@proposals.1/@attempts.1/@edit" start="302" end="-4"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488895486376" sizeMeasure="102" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="c1, Card c2) {&#xA;&#x9;&#x9;//Det er ingen trumf og ess er laveste kort&#xA;&#x9;&#x9;if (ess == false &amp;&amp; trumf == ' ') {&#xA;&#x9;&#x9;&#x9;c1.compareTo(c2);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Det er trumf, men ess er fortsatt lavest&#xA;&#x9;&#x9;else if (ess == false &amp;&amp; trumf != ' ') {&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Vi har både trumf og ess er høyest&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf == ' ') {&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Vi har ingen trumf, men ess er høyest&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf != ' '){&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.1/@attempts.2/@edit" start="285" end="-14"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488896293212" sizeMeasure="103">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="return c1.compareTo(c2);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Det er trumf, men ess er fortsatt lavest&#xA;&#x9;&#x9;else if (ess == false &amp;&amp; trumf != ' ') {&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Vi har både trumf og ess er høyest&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf == ' ') {&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Vi har ingen trumf, men ess er høyest&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf != ' '){&#xA;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf &amp;&amp; c1.typeOfCard() > c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return 0;" edit="/1/@proposals.0/@proposals.1/@attempts.3/@edit" start="387" end="-10"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488897005886" sizeMeasure="103">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getSuit() != trumf &amp;&amp; c1.getSuit() != trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() == 1 &amp;&amp; c2.getFace() ==1) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() &lt; c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() > c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// Vi har ingen trumf, men ess er høyest&#xA;&#x9;&#x9;else if (ess == true &amp;&amp; trumf != ' '){&#xA;&#x9;&#x9;&#x9;if (c1.getFace() == 1 &amp;&amp; c1.getFace() != 1) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getFace() != 1 &amp;&amp; c1.getFace() == 1) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getFace() != 1 &amp;&amp; c1.getFace() != 1 &amp;&amp; c1.typeOfCard() &lt; c2.typeOfCard()) {&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else if (c1.getFace() != 1 &amp;&amp; c1.getFace() != 1" edit="/1/@proposals.0/@proposals.1/@attempts.4/@edit" start="1301" end="-259"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488897528808" sizeMeasure="37">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="else {&#xA;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;}&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S', 2);&#xA;&#x9;&#x9;Card c2 = new Card('D',1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;CardComparator cc = new CardComparator(true, ' ');&#xA;&#x9;&#x9;System.out.println(cc.compare(c1, c2));&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;&#x9;" edit="/1/@proposals.0/@proposals.1/@attempts.5/@edit" start="418" end="-2"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488897585093" sizeMeasure="37">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="fals" edit="/1/@proposals.0/@proposals.1/@attempts.6/@edit" start="595" end="-64"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488898321613" sizeMeasure="60" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="if (ess == false) {&#xA;&#x9;&#x9;&#x9;if (trumf == ' ') {&#xA;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getSuit() != c1.getSuit()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if (c2.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess == true) {&#xA;&#x9;&#x9;&#x9;if (trumf == ' ') {&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.1/@attempts.7/@edit" start="302" end="-221"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488898592864" sizeMeasure="70" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="if (c1.getFace() != c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.1/@attempts.8/@edit" start="720" end="-250"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488898817627" sizeMeasure="107" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;if (c1.getSuit() == c2.getSuit()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() != c2.getFace()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if (c2.getSuit() == trumf) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else if (c1.getFace() == 1 &amp;&amp; (c1.typeOfCard() > c2.typeOfCard())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return c1.compareTo(c2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}" edit="/1/@proposals.0/@proposals.1/@attempts.9/@edit" start="1005" end="-230"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488898841199" sizeMeasure="110">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="&#x9;else {&#xA;&#x9;&#x9;&#x9;return 0;" edit="/1/@proposals.0/@proposals.1/@attempts.10/@edit" start="1872" end="-225"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488898902064" sizeMeasure="113" errorCount="1">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="CardComparator cc2 = new CardComparator(true, ' ');&#xA;&#x9;&#x9;CardComparator cc3 = new CardComparator(true, 'D');&#xA;&#x9;&#x9;CardComparator cc = new CardComparator(false, 'H" edit="/1/@proposals.0/@proposals.1/@attempts.11/@edit" start="2064" end="-59"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916465876" sizeMeasure="114" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="4 = new CardComparator(false, 'H');&#xA;&#x9;&#x9;System.out.println(cc.compare(c1, c2));&#xA;&#x9;&#x9;System.out.println(cc3" edit="/1/@proposals.0/@proposals.1/@attempts.12/@edit" start="2189" end="-32"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916707909" sizeMeasure="80" warningCount="3">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="private char[] suits = {'S','H','D','C'};&#xA;&#x9;private boolean ess;&#xA;&#x9;private char trumf;&#xA;&#xA;&#x9;public CardComparator(boolean ess, char trumf){&#xA;&#x9;&#x9;this.trumf = trumf;&#xA;&#x9;&#x9;this.ess = ess;&#xA;&#x9;}&#xA;&#x9;public int compare(Card card1, Card card2) {&#xA;&#xA;&#x9;&#x9;if (card1.getSuit() != card2.getSuit()) {&#xA;&#x9;&#x9;&#x9;if(card1.getSuit() == this.trumf){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}else if (card2.getSuit() == this.trumf){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;int verdiCard1 = 0;&#xA;&#x9;&#x9;&#x9;int verdiCard2 = 0;&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; suits.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;if(card1.getSuit() == suits[i]){&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;verdiCard1 = i;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (card2.getSuit()== suits[i]){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;verdiCard2 = i;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;if (verdiCard1>verdiCard2){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess){&#xA;&#x9;&#x9;&#x9;if(card1.getFace() == 1 &amp;&amp; card2.getFace() != 1){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}else if(card1.getFace() != 1 &amp;&amp; card2.getFace() == 1){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;if( card2.getFace() > card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}else if( card2.getFace() &lt; card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#xA;&#x9;&#x9;&#x9;if( card2.getFace() > card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else if( card2.getFace() &lt; card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S', 2);&#xA;&#x9;&#x9;Card c2 = new Card('D',1);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;CardComparator cc = new CardComparator(false, ' ');&#xA;&#x9;&#x9;CardComparator cc2 = new CardComparator(true, ' ');&#xA;&#x9;&#x9;CardComparator cc3 = new CardComparator(true, 'D');&#xA;&#x9;&#x9;CardComparator cc4 = new CardComparator(false, 'H');&#xA;&#x9;&#x9;System.out.println(cc.compare(c1, c2));&#xA;&#x9;&#x9;System.out.println(cc" edit="/1/@proposals.0/@proposals.1/@attempts.13/@edit" start="109" end="-32"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916773528" sizeMeasure="80" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="3" edit="/1/@proposals.0/@proposals.1/@attempts.14/@edit" start="1695" end="-32"/>
        </attempts>
        <attempts xsi:type="jdt:JdtSourceEditEvent" timestamp="1488916954711" sizeMeasure="108" warningCount="2">
          <edit xsi:type="exercise:ReplaceSubstringEdit" storedString="ArrayList;&#xA;import java.util.Comparator;&#xA;&#xA;public class CardComparator implements Comparator&lt;Card>{&#xA;&#x9;private char[] suits = {'S','H','D','C'};&#xA;&#x9;private boolean ess;&#xA;&#x9;private char trumf;&#xA;&#xA;&#x9;public CardComparator(boolean ess, char trumf){&#xA;&#x9;&#x9;this.trumf = trumf;&#xA;&#x9;&#x9;this.ess = ess;&#xA;&#x9;}&#xA;&#x9;public int compare(Card card1, Card card2) {&#xA;&#xA;&#x9;&#x9;if (card1.getSuit() != card2.getSuit()) {&#xA;&#x9;&#x9;&#x9;if(card1.getSuit() == this.trumf){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}else if (card2.getSuit() == this.trumf){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;int verdiCard1 = 0;&#xA;&#x9;&#x9;&#x9;int verdiCard2 = 0;&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; suits.length; i++) {&#xA;&#x9;&#x9;&#x9;&#x9;if(card1.getSuit() == suits[i]){&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;verdiCard1 = i;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (card2.getSuit()== suits[i]){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;verdiCard2 = i;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;if (verdiCard1>verdiCard2){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if (ess){&#xA;&#x9;&#x9;&#x9;if(card1.getFace() == 1 &amp;&amp; card2.getFace() != 1){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}else if(card1.getFace() != 1 &amp;&amp; card2.getFace() == 1){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;if( card2.getFace() > card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;&#x9;}else if( card2.getFace() &lt; card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#xA;&#x9;&#x9;&#x9;if( card2.getFace() > card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;return -1;&#xA;&#x9;&#x9;&#x9;}else if( card2.getFace() &lt; card1.getFace()){&#xA;&#x9;&#x9;&#x9;&#x9;return 1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;else{&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;public static void main(String[] args) {&#xA;&#x9;&#x9;Card c1 = new Card('S', 2);&#xA;&#x9;&#x9;Card c2 = new Card('D',1);&#xA;&#x9;&#x9;Card c3 = new Card('D', 1);&#xA;&#x9;&#x9;Card c4 = new Card('H', 11);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;CardComparator cc = new CardComparator(false, ' ');&#xA;&#x9;&#x9;CardComparator cc2 = new CardComparator(true, ' ');&#xA;&#x9;&#x9;CardComparator cc3 = new CardComparator(true, 'D');&#xA;&#x9;&#x9;CardComparator cc4 = new CardComparator(false, 'H');&#xA;&#x9;&#x9;System.out.println(cc.compare(c1, c2));&#xA;&#x9;&#x9;System.out.println(cc3.compare(c1, c2));&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList.add(c1);&#xA;&#x9;&#x9;cardList.add(c2);&#xA;&#x9;&#x9;cardList.add(c3);&#xA;&#x9;&#x9;cardList.add(c4);&#xA;&#x9;&#x9;cardList.sort(null);&#xA;&#x9;&#x9;System.out.println(cardList);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ArrayList&lt;Card> cardList2 = new ArrayList&lt;>();&#xA;&#x9;&#x9;cardList2.add(c1);&#xA;&#x9;&#x9;cardList2.add(c2);&#xA;&#x9;&#x9;cardList2.add(c3);&#xA;&#x9;&#x9;cardList2.add(c4);&#xA;&#x9;&#x9;for(int i = 0; i &lt; cardList2.size(); i++) {&#xA;&#x9;&#x9;&#x9;&#x9;for (int j = cardList2.size() - 1; j > i; j--) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Card s1 = cardList2.get(j - 1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Card s2 = cardList2.get(j);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (cc.compare(s1, s2) == -1) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cardList2.set(j, s1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cardList2.set(j-1, s2);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;System.out.println(cardList2);" edit="/1/@proposals.0/@proposals.1/@attempts.15/@edit" start="38" end="-11"/>
        </attempts>
      </proposals>
      <proposals xsi:type="jdt:JdtLaunchProposal" question="/0/@parts.0/@tasks.2/@q" answer="/0/@parts.0/@tasks.2/@a">
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488883038423" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488883081448" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488883106739" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488883138900" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488884098824" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488884150037" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488884159077" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488884187538" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488893586774" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488893644156" mode="run"/>
      </proposals>
      <proposals xsi:type="jdt:JdtLaunchProposal" question="/0/@parts.0/@tasks.3/@q" answer="/0/@parts.0/@tasks.3/@a">
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488897531397" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488897585024" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488916465809" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488916525861" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488916751362" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488916773431" mode="run"/>
        <attempts xsi:type="jdt:JdtLaunchEvent" timestamp="1488916954590" mode="run"/>
      </proposals>
      <proposals xsi:type="junit:JunitTestProposal" question="/0/@parts.0/@tasks.4/@q" answer="/0/@parts.0/@tasks.4/@a" completion="1.0">
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488882853444" completion="0.0" errorCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488897031821" completion="0.0" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488898850993" completion="0.0" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488916417695" completion="0.0" failureCount="3"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488916533750" completion="0.3333333333333333" successCount="1" failureCount="2"/>
        <attempts xsi:type="junit:JunitTestEvent" timestamp="1488916716300" completion="1.0" successCount="3"/>
      </proposals>
    </proposals>
    <proposals exercisePart="/0/@parts.1">
      <proposals xsi:type="workbench:DebugEventProposal" question="/0/@parts.1/@tasks.0/@q" answer="/0/@parts.1/@tasks.0/@a"/>
      <proposals xsi:type="workbench:CommandExecutionProposal" question="/0/@parts.1/@tasks.1/@q" answer="/0/@parts.1/@tasks.1/@a"/>
      <proposals xsi:type="workbench:CommandExecutionProposal" question="/0/@parts.1/@tasks.2/@q" answer="/0/@parts.1/@tasks.2/@a"/>
      <proposals xsi:type="workbench:PartTaskProposal" question="/0/@parts.1/@tasks.3/@q" answer="/0/@parts.1/@tasks.3/@a"/>
    </proposals>
  </exercise:ExerciseProposals>
</xmi:XMI>
